{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAU,SAAS,gBAAgB,CAAC,MACpC,EAAY,SAAS,aAAa,CAAC,SAEnC,EAAO,MAAM,IAAI,CAAC,EAAU,gBAAgB,CAAC,OAEnD,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAtC,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,UAE7C,AACE,AAAC,MAAM,WAAW,EAAM,OAAO,CAAC,aAAc,OAC7C,MAAM,WAAW,EAAM,OAAO,CAAC,aAAc,MAOvC,EAAM,aAAa,CAAC,GAFpB,AAHQ,WAAW,EAAM,OAAO,CAAC,aAAc,KACvC,WAAW,EAAM,OAAO,CAAC,aAAc,IAM1D,EAEA,CAAA,EAAU,SAAS,CAAG,GAEtB,EAAW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAU,WAAW,CAAC,E,EACpD,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var headers = document.querySelectorAll(\"th\");\n    var tableBody = document.querySelector(\"tbody\");\n    var rows = Array.from(tableBody.querySelectorAll(\"tr\"));\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            var sortedRows = _to_consumable_array(rows).sort(function(a, b) {\n                var aText = a.cells[index].textContent.trim();\n                var bText = b.cells[index].textContent.trim();\n                if (!isNaN(parseFloat(aText.replace(/[^0-9.-]+/g, \"\"))) && !isNaN(parseFloat(bText.replace(/[^0-9.-]+/g, \"\")))) {\n                    var aValue = parseFloat(aText.replace(/[^0-9.-]+/g, \"\"));\n                    var bValue = parseFloat(bText.replace(/[^0-9.-]+/g, \"\"));\n                    return aValue - bValue;\n                } else return aText.localeCompare(bText);\n            });\n            tableBody.innerHTML = \"\";\n            sortedRows.forEach(function(row) {\n                return tableBody.appendChild(row);\n            });\n        });\n    });\n});\n\n//# sourceMappingURL=index.8eab9476.js.map\n","'use strict';\n\n// write code here\ndocument.addEventListener('DOMContentLoaded', () => {\n  const headers = document.querySelectorAll('th');\n  const tableBody = document.querySelector('tbody');\n\n  const rows = Array.from(tableBody.querySelectorAll('tr'));\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      const sortedRows = [...rows].sort((a, b) => {\n        const aText = a.cells[index].textContent.trim();\n        const bText = b.cells[index].textContent.trim();\n\n        if (\n          !isNaN(parseFloat(aText.replace(/[^0-9.-]+/g, ''))) &&\n          !isNaN(parseFloat(bText.replace(/[^0-9.-]+/g, '')))\n        ) {\n          const aValue = parseFloat(aText.replace(/[^0-9.-]+/g, ''));\n          const bValue = parseFloat(bText.replace(/[^0-9.-]+/g, ''));\n\n          return aValue - bValue;\n        } else {\n          return aText.localeCompare(bText);\n        }\n      });\n\n      tableBody.innerHTML = '';\n\n      sortedRows.forEach((row) => tableBody.appendChild(row));\n    });\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","document","addEventListener","headers","querySelectorAll","tableBody","querySelector","rows","from","forEach","header","index","sortedRows","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","aText","cells","textContent","trim","bText","isNaN","parseFloat","replace","localeCompare","aValue","innerHTML","row","appendChild"],"version":3,"file":"index.8eab9476.js.map"}